<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.evol.mapper.NetOrderMapper">
  <resultMap id="BaseResultMap" type="com.evol.domain.model.NetOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="movie_id" jdbcType="INTEGER" property="movieId" />
    <result column="movie_name" jdbcType="VARCHAR" property="movieName" />
    <result column="paid_amount" jdbcType="INTEGER" property="paidAmount" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="pay_order_no" jdbcType="VARCHAR" property="payOrderNo" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="refund_order_no" jdbcType="VARCHAR" property="refundOrderNo" />
    <result column="refund_time" jdbcType="TIMESTAMP" property="refundTime" />
    <result column="pay_mode_type" jdbcType="INTEGER" property="payModeType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="udpate_time" jdbcType="TIMESTAMP" property="udpateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_no, user_id, username, movie_id, movie_name, paid_amount, amount, status, 
    pay_order_no, pay_time, refund_order_no, refund_time, pay_mode_type, create_time, 
    udpate_time
  </sql>
  <select id="selectByExample" parameterType="com.evol.domain.model.NetOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from net_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from net_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from net_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.evol.domain.model.NetOrderExample">
    delete from net_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.evol.domain.model.NetOrder" useGeneratedKeys="true">
    insert into net_order (order_no, user_id, username, 
      movie_id, movie_name, paid_amount, 
      amount, status, pay_order_no, 
      pay_time, refund_order_no, refund_time, 
      pay_mode_type, create_time, udpate_time
      )
    values (#{orderNo,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{movieId,jdbcType=INTEGER}, #{movieName,jdbcType=VARCHAR}, #{paidAmount,jdbcType=INTEGER}, 
      #{amount,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{payOrderNo,jdbcType=VARCHAR}, 
      #{payTime,jdbcType=TIMESTAMP}, #{refundOrderNo,jdbcType=VARCHAR}, #{refundTime,jdbcType=TIMESTAMP}, 
      #{payModeType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{udpateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.evol.domain.model.NetOrder" useGeneratedKeys="true">
    insert into net_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="movieId != null">
        movie_id,
      </if>
      <if test="movieName != null">
        movie_name,
      </if>
      <if test="paidAmount != null">
        paid_amount,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="payOrderNo != null">
        pay_order_no,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="refundOrderNo != null">
        refund_order_no,
      </if>
      <if test="refundTime != null">
        refund_time,
      </if>
      <if test="payModeType != null">
        pay_mode_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="udpateTime != null">
        udpate_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="movieId != null">
        #{movieId,jdbcType=INTEGER},
      </if>
      <if test="movieName != null">
        #{movieName,jdbcType=VARCHAR},
      </if>
      <if test="paidAmount != null">
        #{paidAmount,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="payOrderNo != null">
        #{payOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundOrderNo != null">
        #{refundOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="refundTime != null">
        #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payModeType != null">
        #{payModeType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="udpateTime != null">
        #{udpateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.evol.domain.model.NetOrderExample" resultType="java.lang.Long">
    select count(*) from net_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update net_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.movieId != null">
        movie_id = #{record.movieId,jdbcType=INTEGER},
      </if>
      <if test="record.movieName != null">
        movie_name = #{record.movieName,jdbcType=VARCHAR},
      </if>
      <if test="record.paidAmount != null">
        paid_amount = #{record.paidAmount,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.payOrderNo != null">
        pay_order_no = #{record.payOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundOrderNo != null">
        refund_order_no = #{record.refundOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundTime != null">
        refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payModeType != null">
        pay_mode_type = #{record.payModeType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.udpateTime != null">
        udpate_time = #{record.udpateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update net_order
    set id = #{record.id,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      movie_id = #{record.movieId,jdbcType=INTEGER},
      movie_name = #{record.movieName,jdbcType=VARCHAR},
      paid_amount = #{record.paidAmount,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      pay_order_no = #{record.payOrderNo,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      refund_order_no = #{record.refundOrderNo,jdbcType=VARCHAR},
      refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
      pay_mode_type = #{record.payModeType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      udpate_time = #{record.udpateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.evol.domain.model.NetOrder">
    update net_order
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="movieId != null">
        movie_id = #{movieId,jdbcType=INTEGER},
      </if>
      <if test="movieName != null">
        movie_name = #{movieName,jdbcType=VARCHAR},
      </if>
      <if test="paidAmount != null">
        paid_amount = #{paidAmount,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="payOrderNo != null">
        pay_order_no = #{payOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundOrderNo != null">
        refund_order_no = #{refundOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="refundTime != null">
        refund_time = #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payModeType != null">
        pay_mode_type = #{payModeType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="udpateTime != null">
        udpate_time = #{udpateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.evol.domain.model.NetOrder">
    update net_order
    set order_no = #{orderNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      movie_id = #{movieId,jdbcType=INTEGER},
      movie_name = #{movieName,jdbcType=VARCHAR},
      paid_amount = #{paidAmount,jdbcType=INTEGER},
      amount = #{amount,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      pay_order_no = #{payOrderNo,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      refund_order_no = #{refundOrderNo,jdbcType=VARCHAR},
      refund_time = #{refundTime,jdbcType=TIMESTAMP},
      pay_mode_type = #{payModeType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      udpate_time = #{udpateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>