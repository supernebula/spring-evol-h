#
## 连接池配置
## business 数据库配置
## 只有下面三个是必填项（使用内嵌数据库的话这三个也可以不用填，会使用默认配置），其他配置不是必须的
#spring.datasource.druid.business.name= buniness
#spring.datasource.druid.business.url= \
#  jdbc:mysql://localhost:3306/coach_business?useUnicode=true&characterEncoding\
#  =utf-8&allowMultiQueries=true&autoReconnect=true&failOverReadOnly=false&useSSL=false
#spring.datasource.druid.business.buniness.username= root
#spring.datasource.druid.business.buniness.password= 123456
#spring.datasource.druid.business.buniness.driver-class-name= com.mysql.cj.jdbc.Driver
## 配置获取连接等待超时的时间
#spring.datasource.druid.buniness.max-wait= 60000
#
##用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
## 如果validationQuery为null,testOnBorrow,testOnBorrow,testOnReturn,testWhileIdle都不会起作用。这个可以不配置
#spring.datasource.druid.business.validation-query= SELECT 'x'
#spring.datasource.druid.business.test-on-borrow= false
#spring.datasource.druid.business.test-on-return= false
#spring.datasource.druid.business.test-while-idle= true
##配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.druid.business.time-between-eviction-runs-millis= 60000
##配置一个连接在池中最小生存的时间，单位是毫秒
#spring.datasource.druid.business.min-evictable-idle-time-millis= 300000
#spring.datasource.druid.business.filters= stat,wall
#
## order 数据库配置
## 只有下面三个是必填项（使用内嵌数据库的话这三个也可以不用填，会使用默认配置），其他配置不是必须的
#spring.datasource.druid.order.name=order
#spring.datasource.druid.order.url=jdbc:mysql://localhost:3306/coach_order?useUnicode=true&characterEncoding=utf\
#  -8&allowMultiQueries=true&autoReconnect=true&failOverReadOnly=false&useSSL=false
#spring.datasource.druid.order.username= root
#spring.datasource.druid.order.password= 123456
#spring.datasource.druid.order.driver-class-name= com.mysql.cj.jdbc.Driver
## 配置获取连接等待超时的时间
#spring.datasource.druid.order.max-wait= 60000
#
##用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
## 如果validationQuery为null,testOnBorrow,testOnBorrow,testOnReturn,testWhileIdle都不会起作用。这个可以不配置
#spring.datasource.druid.order.validation-query= SELECT 'x'
#spring.datasource.druid.order.test-on-borrow= false
#spring.datasource.druid.order.test-on-return= false
#spring.datasource.druid.order.test-while-idle= true
##配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.druid.order.time-between-eviction-runs-millis= 60000
##配置一个连接在池中最小生存的时间，单位是毫秒
#spring.datasource.druid.order.min-evictable-idle-time-millis= 300000
#spring.datasource.druid.order.filters= stat,wall
#
## user 数据库配置
## 只有下面三个是必填项（使用内嵌数据库的话这三个也可以不用填，会使用默认配置），其他配置不是必须的
#spring.datasource.druid.user.name= user
#spring.datasource.druid.user.url= jdbc:mysql://localhost:3306/coach_user?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&autoReconnect=true&failOverReadOnly=false&useSSL=false
#spring.datasource.druid.user.username= root
#spring.datasource.druid.user.password= 123456
#spring.datasource.druid.user.driver-class-name= com.mysql.cj.jdbc.Driver
## 配置获取连接等待超时的时间
#spring.datasource.druid.user.max-wait= 60000
#
##用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
## 如果validationQuery为null,testOnBorrow,testOnBorrow,testOnReturn,testWhileIdle都不会起作用。这个可以不配置
#spring.datasource.druid.user.validation-query= SELECT 'x'
#spring.datasource.druid.user.test-on-borrow= false
#spring.datasource.druid.user.test-on-return= false
#spring.datasource.druid.user.test-while-idle= true
##配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.druid.user.time-between-eviction-runs-millis= 60000
##配置一个连接在池中最小生存的时间，单位是毫秒
#spring.datasource.druid.user.min-evictable-idle-time-millis= 300000
#spring.datasource.druid.user.filters= stat,wall